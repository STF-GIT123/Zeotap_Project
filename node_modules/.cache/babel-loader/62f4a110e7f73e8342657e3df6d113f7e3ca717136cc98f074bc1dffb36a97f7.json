{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaik Tahira Farheen\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Toolbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { sum, average, max, min, count } from './utils/formulaUtils'; // Import formula utilities\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = ({\n  onAddRow,\n  onAddColumn,\n  onApplyFunction,\n  selectedCells\n}) => {\n  _s();\n  const [functionName, setFunctionName] = useState('');\n\n  // Handle applying a function to the selected cells\n  const handleFunctionApply = () => {\n    if (!selectedCells || selectedCells.length === 0) return;\n    let data = selectedCells.map(cell => parseFloat(cell.value)).filter(val => !isNaN(val));\n    if (data.length === 0) return;\n    let result = 0;\n    switch (functionName) {\n      case 'SUM':\n        result = sum(data);\n        break;\n      case 'AVERAGE':\n        result = average(data);\n        break;\n      case 'MAX':\n        result = max(data);\n        break;\n      case 'MIN':\n        result = min(data);\n        break;\n      case 'COUNT':\n        result = count(data);\n        break;\n      default:\n        return;\n    }\n    onApplyFunction(result); // Callback to update the spreadsheet with the result\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAddColumn,\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFunctionName(e.target.value),\n        value: functionName,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Function\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SUM\",\n          children: \"SUM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AVERAGE\",\n          children: \"AVERAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MAX\",\n          children: \"MAX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MIN\",\n          children: \"MIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COUNT\",\n          children: \"COUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFunctionApply,\n        children: \"Apply Function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Toolbar, \"NZ6VJ6WwcghJvvHi89yeKx5NsDI=\");\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useState","sum","average","max","min","count","jsxDEV","_jsxDEV","Toolbar","onAddRow","onAddColumn","onApplyFunction","selectedCells","_s","functionName","setFunctionName","handleFunctionApply","length","data","map","cell","parseFloat","value","filter","val","isNaN","result","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Shaik Tahira Farheen/Desktop/project/client/src/components/Toolbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sum, average, max, min, count } from './utils/formulaUtils';  // Import formula utilities\r\n\r\nconst Toolbar = ({ onAddRow, onAddColumn, onApplyFunction, selectedCells }) => {\r\n  const [functionName, setFunctionName] = useState('');\r\n\r\n  // Handle applying a function to the selected cells\r\n  const handleFunctionApply = () => {\r\n    if (!selectedCells || selectedCells.length === 0) return;\r\n\r\n    let data = selectedCells.map(cell => parseFloat(cell.value)).filter(val => !isNaN(val));\r\n\r\n    if (data.length === 0) return;\r\n\r\n    let result = 0;\r\n    switch (functionName) {\r\n      case 'SUM':\r\n        result = sum(data);\r\n        break;\r\n      case 'AVERAGE':\r\n        result = average(data);\r\n        break;\r\n      case 'MAX':\r\n        result = max(data);\r\n        break;\r\n      case 'MIN':\r\n        result = min(data);\r\n        break;\r\n      case 'COUNT':\r\n        result = count(data);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    onApplyFunction(result);  // Callback to update the spreadsheet with the result\r\n  };\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <button onClick={onAddRow}>Add Row</button>\r\n      <button onClick={onAddColumn}>Add Column</button>\r\n      \r\n      <div className=\"function-controls\">\r\n        <select onChange={(e) => setFunctionName(e.target.value)} value={functionName}>\r\n          <option value=\"\">Select Function</option>\r\n          <option value=\"SUM\">SUM</option>\r\n          <option value=\"AVERAGE\">AVERAGE</option>\r\n          <option value=\"MAX\">MAX</option>\r\n          <option value=\"MIN\">MIN</option>\r\n          <option value=\"COUNT\">COUNT</option>\r\n        </select>\r\n        <button onClick={handleFunctionApply}>Apply Function</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}