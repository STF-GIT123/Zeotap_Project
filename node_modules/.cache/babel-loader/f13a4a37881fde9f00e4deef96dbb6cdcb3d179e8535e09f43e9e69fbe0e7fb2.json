{"ast":null,"code":"// In FormulaBar.js\nimport React,{useState,useEffect}from\"react\";import{evaluateFormula}from\"./utils/formulaUtils\";// Correct import path\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FormulaBar(_ref){let{formula,setFormula,grid,setGrid,currentCell}=_ref;const[cellValue,setCellValue]=useState(\"\");useEffect(()=>{const{row,col}=currentCell;setCellValue(grid[row][col]);},[currentCell,grid]);const handleFormulaChange=e=>{setFormula(e.target.value);};const applyFormula=()=>{const{row,col}=currentCell;const newGrid=[...grid];newGrid[row][col]=evaluateFormula(formula,grid);// Use the formula evaluation function\nsetGrid(newGrid);setFormula(\"\");// Clear formula bar after applying\n};return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"10px\",padding:\"10px\",backgroundColor:\"#f1f1f1\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formula||cellValue,onChange:handleFormulaChange,placeholder:\"Enter formula (e.g., =SUM(A1:A5))\",style:{width:\"100%\",padding:\"5px\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:applyFormula,children:\"Apply\"})]});}export default FormulaBar;","map":{"version":3,"names":["React","useState","useEffect","evaluateFormula","jsx","_jsx","jsxs","_jsxs","FormulaBar","_ref","formula","setFormula","grid","setGrid","currentCell","cellValue","setCellValue","row","col","handleFormulaChange","e","target","value","applyFormula","newGrid","style","marginBottom","padding","backgroundColor","children","type","onChange","placeholder","width","onClick"],"sources":["C:/Users/Shaik Tahira Farheen/Desktop/project/client/src/components/FormulaBar.js"],"sourcesContent":["// In FormulaBar.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { evaluateFormula } from \"./utils/formulaUtils\"; // Correct import path\r\n\r\nfunction FormulaBar({ formula, setFormula, grid, setGrid, currentCell }) {\r\n  const [cellValue, setCellValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const { row, col } = currentCell;\r\n    setCellValue(grid[row][col]);\r\n  }, [currentCell, grid]);\r\n\r\n  const handleFormulaChange = (e) => {\r\n    setFormula(e.target.value);\r\n  };\r\n\r\n  const applyFormula = () => {\r\n    const { row, col } = currentCell;\r\n    const newGrid = [...grid];\r\n    newGrid[row][col] = evaluateFormula(formula, grid); // Use the formula evaluation function\r\n    setGrid(newGrid);\r\n    setFormula(\"\"); // Clear formula bar after applying\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\", padding: \"10px\", backgroundColor: \"#f1f1f1\" }}>\r\n      <input\r\n        type=\"text\"\r\n        value={formula || cellValue}\r\n        onChange={handleFormulaChange}\r\n        placeholder=\"Enter formula (e.g., =SUM(A1:A5))\"\r\n        style={{ width: \"100%\", padding: \"5px\" }}\r\n      />\r\n      <button onClick={applyFormula}>Apply</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormulaBar;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,eAAe,KAAQ,sBAAsB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAsD,IAArD,CAAEC,OAAO,CAAEC,UAAU,CAAEC,IAAI,CAAEC,OAAO,CAAEC,WAAY,CAAC,CAAAL,IAAA,CACrE,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAEe,GAAG,CAAEC,GAAI,CAAC,CAAGJ,WAAW,CAChCE,YAAY,CAACJ,IAAI,CAACK,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAC9B,CAAC,CAAE,CAACJ,WAAW,CAAEF,IAAI,CAAC,CAAC,CAEvB,KAAM,CAAAO,mBAAmB,CAAIC,CAAC,EAAK,CACjCT,UAAU,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEN,GAAG,CAAEC,GAAI,CAAC,CAAGJ,WAAW,CAChC,KAAM,CAAAU,OAAO,CAAG,CAAC,GAAGZ,IAAI,CAAC,CACzBY,OAAO,CAACP,GAAG,CAAC,CAACC,GAAG,CAAC,CAAGf,eAAe,CAACO,OAAO,CAAEE,IAAI,CAAC,CAAE;AACpDC,OAAO,CAACW,OAAO,CAAC,CAChBb,UAAU,CAAC,EAAE,CAAC,CAAE;AAClB,CAAC,CAED,mBACEJ,KAAA,QAAKkB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAM,CAAEC,OAAO,CAAE,MAAM,CAAEC,eAAe,CAAE,SAAU,CAAE,CAAAC,QAAA,eAChFxB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXR,KAAK,CAAEZ,OAAO,EAAIK,SAAU,CAC5BgB,QAAQ,CAAEZ,mBAAoB,CAC9Ba,WAAW,CAAC,mCAAmC,CAC/CP,KAAK,CAAE,CAAEQ,KAAK,CAAE,MAAM,CAAEN,OAAO,CAAE,KAAM,CAAE,CAC1C,CAAC,cACFtB,IAAA,WAAQ6B,OAAO,CAAEX,YAAa,CAAAM,QAAA,CAAC,OAAK,CAAQ,CAAC,EAC1C,CAAC,CAEV,CAEA,cAAe,CAAArB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}