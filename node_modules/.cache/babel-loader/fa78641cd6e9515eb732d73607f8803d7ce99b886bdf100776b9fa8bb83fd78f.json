{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaik Tahira Farheen\\\\Desktop\\\\Git-Uploads\\\\Zeotap_Project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Toolbar from './components/Toolbar';\nimport Spreadsheet from './components/Spreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [spreadsheetData, setSpreadsheetData] = useState([[]]);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const handleAddRow = () => {\n    setSpreadsheetData([...spreadsheetData, new Array(spreadsheetData[0].length).fill('')]);\n  };\n  const handleAddColumn = () => {\n    setSpreadsheetData(spreadsheetData.map(row => [...row, '']));\n  };\n  const handleApplyFunction = result => {\n    // Apply result to the first selected cell\n    if (selectedCells.length > 0) {\n      const updatedData = [...spreadsheetData];\n      updatedData[selectedCells[0].rowIndex][selectedCells[0].colIndex] = result;\n      setSpreadsheetData(updatedData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      onAddRow: handleAddRow,\n      onAddColumn: handleAddColumn,\n      onApplyFunction: handleApplyFunction,\n      selectedCells: selectedCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spreadsheet, {\n      data: spreadsheetData,\n      setSelectedCells: setSelectedCells\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vyabxIO2u9euaCqIQTbqPbHGXLc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Toolbar","Spreadsheet","jsxDEV","_jsxDEV","App","_s","spreadsheetData","setSpreadsheetData","selectedCells","setSelectedCells","handleAddRow","Array","length","fill","handleAddColumn","map","row","handleApplyFunction","result","updatedData","rowIndex","colIndex","className","children","onAddRow","onAddColumn","onApplyFunction","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/Shaik Tahira Farheen/Desktop/Git-Uploads/Zeotap_Project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Toolbar from './components/Toolbar';\r\nimport Spreadsheet from './components/Spreadsheet';\r\n\r\nconst App = () => {\r\n  const [spreadsheetData, setSpreadsheetData] = useState([[]]);\r\n  const [selectedCells, setSelectedCells] = useState([]);\r\n\r\n  const handleAddRow = () => {\r\n    setSpreadsheetData([...spreadsheetData, new Array(spreadsheetData[0].length).fill('')]);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    setSpreadsheetData(spreadsheetData.map(row => [...row, '']));\r\n  };\r\n\r\n  const handleApplyFunction = (result) => {\r\n    // Apply result to the first selected cell\r\n    if (selectedCells.length > 0) {\r\n      const updatedData = [...spreadsheetData];\r\n      updatedData[selectedCells[0].rowIndex][selectedCells[0].colIndex] = result;\r\n      setSpreadsheetData(updatedData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Toolbar \r\n        onAddRow={handleAddRow} \r\n        onAddColumn={handleAddColumn} \r\n        onApplyFunction={handleApplyFunction} \r\n        selectedCells={selectedCells} \r\n      />\r\n      <Spreadsheet data={spreadsheetData} setSelectedCells={setSelectedCells} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBH,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAE,IAAIK,KAAK,CAACL,eAAe,CAAC,CAAC,CAAC,CAACM,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACzF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BP,kBAAkB,CAACD,eAAe,CAACS,GAAG,CAACC,GAAG,IAAI,CAAC,GAAGA,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;IACtC;IACA,IAAIV,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMO,WAAW,GAAG,CAAC,GAAGb,eAAe,CAAC;MACxCa,WAAW,CAACX,aAAa,CAAC,CAAC,CAAC,CAACY,QAAQ,CAAC,CAACZ,aAAa,CAAC,CAAC,CAAC,CAACa,QAAQ,CAAC,GAAGH,MAAM;MAC1EX,kBAAkB,CAACY,WAAW,CAAC;IACjC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACH,OAAO;MACNwB,QAAQ,EAAEd,YAAa;MACvBe,WAAW,EAAEX,eAAgB;MAC7BY,eAAe,EAAET,mBAAoB;MACrCT,aAAa,EAAEA;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF3B,OAAA,CAACF,WAAW;MAAC8B,IAAI,EAAEzB,eAAgB;MAACG,gBAAgB,EAAEA;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhCID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}